{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring\\\\PyMath_Front\\\\frontend\\\\src\\\\components\\\\HeadNav\\\\index.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Layout, Button, Modal, Badge } from \"antd\";\nimport memoryUtils from '../../utils/memoryUtils';\nimport storageUtils from '../../utils/storageUtils';\nimport menuList from '../../config/menuConfig';\nimport { reqMyMessage } from '../../api/index';\nimport { NotificationOutlined, ArrowLeftOutlined } from '@ant-design/icons';\nimport './index.css';\n// 通过connect高级组件 对普通组件进行包装\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header\n} = Layout;\nconst {\n  confirm\n} = Modal;\nclass MHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.dataPreparation = () => {\n      let user = memoryUtils.user;\n      this.userEmail = user.email;\n      console.log('发到后端的客户邮箱' + this.userEmail);\n    };\n    this.loadMessage = async () => {\n      const email = this.userEmail;\n      let result_json;\n      console.log(email);\n      result_json = await reqMyMessage(email);\n      console.log(\"shut up\" + result_json.data);\n      const result = JSON.parse(result_json.data);\n      console.log(\"shut down\" + result.code);\n      console.log(\"看看长度\" + this.count);\n      if (result.code === 200) {\n        console.log(\"shut down\" + result.return_obj);\n        this.setState({\n          count: result.return_obj.length\n        });\n        console.log(\"看看长度\" + this.state.count);\n      }\n    };\n    this.message = () => {\n      this.setState({\n        count: 0\n      });\n      this.props.history.replace('/message');\n    };\n    this.logout = () => {\n      confirm({\n        title: '确定要退出登录吗？',\n        onOk: () => {\n          storageUtils.removeUser();\n          // memoryUtils.user = {};\n          // this.props.removeUser();\n          this.props.history.replace('/home');\n        },\n        onCancel() {\n          console.log('Cancel');\n        }\n      });\n    };\n    this.getTitle = () => {\n      // 获取动态的标题\n      let title = '';\n      // 根据当前请求的path得到对应的title\n      const path = this.props.location.pathname;\n      console.log(path);\n      menuList.forEach(item => {\n        if (item.key === path) {\n          title = item.title;\n        }\n      });\n      return title;\n    };\n    this.load = () => {\n      this.state.num = 5;\n    };\n    this.state = {\n      num: 5,\n      count: 0\n    };\n  }\n  componentDidMount() {\n    this.load();\n    this.dataPreparation();\n    this.loadMessage();\n  }\n  render() {\n    const user = memoryUtils.user;\n    const {\n      num,\n      count\n    } = this.state;\n    // const user = this.props.user;\n    console.log(user.username + '123');\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        background: '#fff',\n        padding: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"header-title\",\n          children: this.getTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userInfo\",\n            children: [\"wellcome\\uFF0C\", user.username, /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.logout,\n              children: \"log out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"infoButton\",\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              count: count,\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(NotificationOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this),\n                type: \"default\",\n                size: \"medium\",\n                onClick: this.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default _c = withRouter(MHeader);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","withRouter","Link","Layout","Button","Modal","Badge","memoryUtils","storageUtils","menuList","reqMyMessage","NotificationOutlined","ArrowLeftOutlined","connect","jsxDEV","_jsxDEV","Header","confirm","MHeader","constructor","props","dataPreparation","user","userEmail","email","console","log","loadMessage","result_json","data","result","JSON","parse","code","count","return_obj","setState","length","state","message","history","replace","logout","title","onOk","removeUser","onCancel","getTitle","path","location","pathname","forEach","item","key","load","num","componentDidMount","render","username","style","background","padding","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","icon","type","_c","$RefreshReg$"],"sources":["D:/Spring/PyMath_Front/frontend/src/components/HeadNav/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Layout, Button, Modal, Badge } from \"antd\";\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport menuList from '../../config/menuConfig';\r\nimport { reqMyMessage } from '../../api/index';\r\n\r\nimport {\r\n  NotificationOutlined,\r\n  ArrowLeftOutlined\r\n} from '@ant-design/icons';\r\nimport './index.css'\r\n// 通过connect高级组件 对普通组件进行包装\r\nimport { connect } from \"react-redux\";\r\nconst { Header } = Layout;\r\nconst { confirm } = Modal;\r\n\r\n\r\nclass MHeader extends Component {\r\n  dataPreparation = () => {\r\n    let user = memoryUtils.user\r\n    this.userEmail = user.email\r\n    console.log('发到后端的客户邮箱' + this.userEmail)\r\n  }\r\n\r\n\r\n  loadMessage = async () => {\r\n    const email = this.userEmail;\r\n    let result_json\r\n    console.log(email)\r\n    result_json = await reqMyMessage(email);\r\n    console.log(\"shut up\" + result_json.data);\r\n    const result = JSON.parse(result_json.data);\r\n    console.log(\"shut down\" + result.code);\r\n    console.log(\"看看长度\" + this.count);\r\n    if (result.code === 200) {\r\n      console.log(\"shut down\" + result.return_obj);\r\n      this.setState({ count: result.return_obj.length });\r\n      console.log(\"看看长度\" + this.state.count);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      num: 5,\r\n      count:0,\r\n      \r\n    }\r\n  }\r\n  message = () => {\r\n    this.setState({ count:0 })\r\n    this.props.history.replace('/message');\r\n  }\r\n  logout = () => {\r\n    confirm({\r\n      title: '确定要退出登录吗？',\r\n      onOk: () => {\r\n        storageUtils.removeUser();\r\n        // memoryUtils.user = {};\r\n        // this.props.removeUser();\r\n        this.props.history.replace('/home');\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n  }\r\n  getTitle = () => {\r\n    // 获取动态的标题\r\n    let title = '';\r\n    // 根据当前请求的path得到对应的title\r\n    const path = this.props.location.pathname;\r\n    console.log(path);\r\n    menuList.forEach(item => {\r\n      if (item.key === path) {\r\n        title = item.title;\r\n      }\r\n    })\r\n    return title;\r\n\r\n  }\r\n  load = () => {\r\n    this.state.num = 5\r\n  }\r\n  componentDidMount() {\r\n    this.load()\r\n    this.dataPreparation();\r\n    this.loadMessage();\r\n  }\r\n\r\n  render() {\r\n    const user = memoryUtils.user;\r\n    const { num , count } = this.state;\r\n    // const user = this.props.user;\r\n    console.log(user.username + '123');\r\n    console.log(this.props);\r\n    return (\r\n      <Header style={{ background: '#fff', padding: 0 }}>\r\n        <div className=\"header\">\r\n          <h2 className='header-title'>{this.getTitle()}</h2>\r\n          <div className=\"header-user\">\r\n\r\n            <div className='userInfo'>\r\n              wellcome，{user.username}\r\n              <Button onClick={this.logout}>log out</Button>\r\n\r\n            </div>\r\n            <div className='infoButton'>\r\n              <Badge\r\n                count={count}\r\n                size=\"small\">\r\n                <Button\r\n                  icon={<NotificationOutlined />}\r\n                  type='default'\r\n                  size='medium'\r\n                  onClick={this.message}\r\n                >\r\n                  {/* <Link to='/message'></Link> */}\r\n                </Button>\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(MHeader);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}